/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Idw3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Idw3__factory>;
    getContractFactory(
      name: "Idw3Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Idw3Bridge__factory>;
    getContractFactory(
      name: "Idw3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Idw3Factory__factory>;

    getContractAt(
      name: "Idw3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Idw3>;
    getContractAt(
      name: "Idw3Bridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Idw3Bridge>;
    getContractAt(
      name: "Idw3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Idw3Factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
